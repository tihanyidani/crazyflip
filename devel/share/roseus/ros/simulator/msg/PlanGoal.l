;; Auto-generated. Do not edit!


(when (boundp 'simulator::PlanGoal)
  (if (not (find-package "SIMULATOR"))
    (make-package "SIMULATOR"))
  (shadow 'PlanGoal (find-package "SIMULATOR")))
(unless (find-package "SIMULATOR::PLANGOAL")
  (make-package "SIMULATOR::PLANGOAL"))

(in-package "ROS")
;;//! \htmlinclude PlanGoal.msg.html


(defclass simulator::PlanGoal
  :super ros::object
  :slots (_interval_list _command_list ))

(defmethod simulator::PlanGoal
  (:init
   (&key
    ((:interval_list __interval_list) (make-array 0 :initial-element 0.0 :element-type :float))
    ((:command_list __command_list) ())
    )
   (send-super :init)
   (setq _interval_list __interval_list)
   (setq _command_list __command_list)
   self)
  (:interval_list
   (&optional __interval_list)
   (if __interval_list (setq _interval_list __interval_list)) _interval_list)
  (:command_list
   (&rest __command_list)
   (if (keywordp (car __command_list))
       (send* _command_list __command_list)
     (progn
       (if __command_list (setq _command_list (car __command_list)))
       _command_list)))
  (:serialization-length
   ()
   (+
    ;; float64[] _interval_list
    (* 8    (length _interval_list)) 4
    ;; simulator/Command[] _command_list
    (apply #'+ (send-all _command_list :serialization-length)) 4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float64[] _interval_list
     (write-long (length _interval_list) s)
     (dotimes (i (length _interval_list))
       (sys::poke (elt _interval_list i) (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
       )
     ;; simulator/Command[] _command_list
     (write-long (length _command_list) s)
     (dolist (elem _command_list)
       (send elem :serialize s)
       )
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float64[] _interval_list
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _interval_list (instantiate float-vector n))
     (dotimes (i n)
     (setf (elt _interval_list i) (sys::peek buf ptr- :double)) (incf ptr- 8)
     ))
   ;; simulator/Command[] _command_list
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _command_list (let (r) (dotimes (i n) (push (instance simulator::Command :init) r)) r))
     (dolist (elem- _command_list)
     (send elem- :deserialize buf ptr-) (incf ptr- (send elem- :serialization-length))
     ))
   ;;
   self)
  )

(setf (get simulator::PlanGoal :md5sum-) "f4531cf2ab9293bc63bad7d599cfe6cf")
(setf (get simulator::PlanGoal :datatype-) "simulator/PlanGoal")
(setf (get simulator::PlanGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
float64[] interval_list
simulator/Command[] command_list

================================================================================
MSG: simulator/Command
float64 accel
float64 dd_roll
")



(provide :simulator/PlanGoal "f4531cf2ab9293bc63bad7d599cfe6cf")


